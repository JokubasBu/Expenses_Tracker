@page "/expenses"
@inject IExpensesService ExpensesService
@inject NavigationManager NavigationManager
@inject HttpClient http
@inject IFileService FileService

<PageTitle>Expenses</PageTitle> 
<h3>Expenses</h3>

<EditForm Model="expenseFilter" OnSubmit="FilterButton">
    <InputSelect @bind-Value="expenseFilter.Year">
        <option value="0">All Years</option>
        @foreach (var year in Dates.Years)
        {
            <option value="@year">@year</option>
        }
    </InputSelect>
    <InputSelect @bind-Value="expenseFilter.Month">
        <option value="0">All Months</option>
        @foreach (var month in Enum.GetValues(typeof(Dates.Months)))
        {
            <option value="@((int)month)">@month</option>
        }
    </InputSelect>
    <InputSelect @bind-Value="expenseFilter.CategoryId">
        <option value="0">All Categories</option>
        @foreach (var category in ExpensesService.Categories)
        {
            <option value="@category.Id">@category.Title</option>
        }
    </InputSelect>
    <button type="submit" class="btn btn-primary">Filter</button>
</EditForm>

<button class="btn btn-primary" @onclick="AscOrDesc">Order</button>
&nbsp;
<button class="btn btn-success" @onclick="CreateExpense">Add New</button>
&nbsp; &nbsp;
<form @onsubmit="OnUploadFiles">
    <div>
        <br />
        <InputFile id="file-upload" OnChange="@OnInputFileChange" />
        <button type="submit" class="btn btn-outline-primary">Upload File</button>
        &nbsp;
        <text>@message</text>
    </div>
    <br />
</form>

<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Money</th>
            <th>Comment</th>
            <th>Category</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var expense in ExpensesService.AllExpenses.Value)
        {
            <!-- reading data if foreach loop -->
            <tr>
                <td>@expense.Year-@expense.Month.ToString("D2")-@expense.Day.ToString("D2")</td>
                <td>@expense.Money</td>
                <td>@expense.Comment</td>
                <td>@expense.Category.Title</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => ShowExp(expense.Id))"><i class="oi oi-pencil"></i></button>
                    &nbsp;
                    <button class="btn btn-danger" @onclick="(() => DeleteExp(expense.Id))">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private string? message = null;
    IReadOnlyList<IBrowserFile>? selectedFiles;

    protected override async Task OnInitializedAsync() => await ExpensesService.Initialize();

    void ShowExp(int id)
    {
        NavigationManager.NavigateTo($"expense/{id}");
    }

    async Task AscOrDesc()
    {
        await ExpensesService.GetOrderedExpenses();
    }

    Expense expenseFilter = new Expense { Category = new Category() };

    async Task FilterButton()
    {
        expenseFilter.Comment = "Filter"; // Comment can't be empty
        await ExpensesService.ShowFilters(expenseFilter);
    }

    void CreateExpense()
    {
        NavigationManager.NavigateTo("/expense");
    }

    async Task DeleteExp(int id)
    {
        await ExpensesService.DeleteExpense(id);
    }

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFiles = e.GetMultipleFiles();
        message = null;
        this.StateHasChanged();
    }

    private async void OnUploadFiles()
    {
        if (selectedFiles != null)
        {
            message = await FileService.ReadFiles(selectedFiles, message);
        }
        this.StateHasChanged();
    }
}

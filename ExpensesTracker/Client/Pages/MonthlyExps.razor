@page "/monthlyexp"
@inject IMonthlyExpService MonthlyExpService 
@inject NavigationManager NavigationManager

<PageTitle>Monthly Expenses</PageTitle> <!-- this is how we will define this file in navmenu-->
<h3>Monthly Expenses</h3>

<EditForm Model="expenseFilter" OnSubmit="FilterButton">
    <InputSelect @bind-Value="expenseFilter.Year">
        <option value="0">All Years</option>
        @foreach (var year in years)
        {
            <option value="@year">@year</option>
        }
    </InputSelect>
    <InputSelect @bind-Value="expenseFilter.Month">
        <option value="0">All Months</option>
        @foreach (var month in Enum.GetValues(typeof(Dates.Months)))
        {
            <option value="@((int)month)">@month</option>
        }
    </InputSelect>
    <InputSelect @bind-Value="expenseFilter.CategoryId">
        <option value="0">All Categories</option>
            @foreach (var category in MonthlyExpService.Categories)
            {
            <option value="@category.Id">@category.Title</option>
            }
    </InputSelect>
        <button type="submit" class="btn btn-primary">Filter</button>
</EditForm>

<table class="table">
    <thead>
        <button class="btn btn-primary" @onclick="AscOrDesc">Order</button>
        &nbsp;
        <button class="btn btn-success" @onclick="CreateExpense">Add New</button>
        <tr>
            <th>Date</th>
            <th>Money</th>
            <th>Comment</th>
            <th>Category</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var expense in MonthlyExpService.MonthlyExps) 
        {
            <!-- reading data if foreach loop -->
            <tr>
                <td>@expense.Year-@expense.Month.ToString("D2")-@expense.Day.ToString("D2")</td>
                <td>@expense.Money</td>
                <td>@expense.Comment</td>
                <td>@expense.Category.Title</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => ShowExp(expense.Id))"><i class="oi oi-pencil"></i></button>
                    &nbsp;
                    <button class="btn btn-danger" @onclick="(() => DeleteExp(expense.Id))">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    protected override async Task OnInitializedAsync() 
    {
        await MonthlyExpService.GetMonthlyExps(); 
        await MonthlyExpService.GetCategories(); 
    }

    IEnumerable<int> years = new Dates().years;


    void ShowExp(int id){
        NavigationManager.NavigateTo($"expense/{id}");
    }

    async Task AscOrDesc()
    {
        await MonthlyExpService.GetOrderedMonthlyExps();
    }

    MonthlyExp expenseFilter = new MonthlyExp { Category = new Category() };

    async Task FilterButton()
    {
        await MonthlyExpService.ShowFilters(expenseFilter);
    }

    void CreateExpense()
    {
        NavigationManager.NavigateTo("/expense");
    }

    async Task DeleteExp(int id)
    {
        await MonthlyExpService.DeleteExpense(id);
        NavigationManager.NavigateTo("/expense");
    }
}
